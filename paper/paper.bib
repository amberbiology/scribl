@misc{boutillier_kappa_2020,
       author = {Boutillier, Pierre and Feret, Jérôme and Krivine, Jean and Fontana, Walter},
       title = {The {Kappa} {Language} and {Kappa} {Tools}},
       url = {https://kappalanguage.org/},
       year = {2020}
}

@inproceedings{brandes_graphml_2002,
       abstract = {Following a workshop on graph data formats held with the 8th Symposium on Graph Drawing (GD 2000), a task group was formed to propose a format for graphs and graph drawings that meets current and projected requirements. On behalf of this task group, we here present GraphML (Graph Markup Language), an XML format for graph structures, as an initial step towards this goal. Its main characteristic is a unique mechanism that allows to de.ne extension modules for additional data, such as graph drawing information or data specific to a particular application. These modules can freely be combined or stripped without affecting the graph structure, so that information can be added (or omitted) in a well-defined way.},
       address = {Berlin, Heidelberg},
       author = {Brandes, Ulrik and Eiglsperger, Markus and Herman, Ivan and Himsolt, Michael and Marshall, M. Scott},
       booktitle = {Graph {Drawing}},
       doi = {10.1007/3-540-45848-4_59},
       editor = {Mutzel, Petra and Jünger, Michael and Leipert, Sebastian},
       isbn = {978-3-540-45848-7},
       language = {en},
       pages = {501--512},
       publisher = {Springer},
       series = {Lecture {Notes} in {Computer} {Science}},
       title = {{GraphML} {Progress} {Report} {Structural} {Layer} {Proposal}},
       year = {2002}
}

@inproceedings{francis_cypher_2018,
       abstract = {The Cypher property graph query language is an evolving language, originally designed and implemented as part of the Neo4j graph database, and it is currently used by several commercial database products and researchers. We describe Cypher 9, which is the first version of the language governed by the openCypher Implementers Group. We first introduce the language by example, and describe its uses in industry. We then provide a formal semantic definition of the core read-query features of Cypher, including its variant of the property graph data model, and its ASCII Art graph pattern matching mechanism for expressing subgraphs of interest to an application. We compare the features of Cypher to other property graph query languages, and describe extensions, at an advanced stage of development, which will form part of Cypher 10, turning the language into a compositional language which supports graph projections and multiple named graphs.},
       address = {New York, NY, USA},
       author = {Francis, Nadime and Green, Alastair and Guagliardo, Paolo and Libkin, Leonid and Lindaaker, Tobias and Marsault, Victor and Plantikow, Stefan and Rydberg, Mats and Selmer, Petra and Taylor, Andrés},
       booktitle = {Proceedings of the 2018 {International} {Conference} on {Management} of {Data}},
       doi = {10.1145/3183713.3190657},
       isbn = {978-1-4503-4703-7},
       keywords = {cypher, formal semantics, formal specification, graph databases, property graphs, query language},
       pages = {1433--1445},
       publisher = {Association for Computing Machinery},
       series = {{SIGMOD} '18},
       shorttitle = {Cypher},
       title = {Cypher: {An} {Evolving} {Query} {Language} for {Property} {Graphs}},
       url = {https://doi.org/10.1145/3183713.3190657},
       urldate = {2024-02-28},
       year = {2018}
}

@article{gillespie_reactome_2022,
       abstract = {The Reactome Knowledgebase (https://reactome.org), an Elixir core resource, provides manually curated molecular details across a broad range of physiological and pathological biological processes in humans, including both hereditary and acquired disease processes. The processes are annotated as an ordered network of molecular transformations in a single consistent data model. Reactome thus functions both as a digital archive of manually curated human biological processes and as a tool for discovering functional relationships in data such as gene expression profiles or somatic mutation catalogs from tumor cells. Recent curation work has expanded our annotations of normal and disease-associated signaling processes and of the drugs that target them, in particular infections caused by the SARS-CoV-1 and SARS-CoV-2 coronaviruses and the host response to infection. New tools support better simultaneous analysis of high-throughput data from multiple sources and the placement of understudied (‘dark’) proteins from analyzed datasets in the context of Reactome’s manually curated pathways.},
       author = {Gillespie, Marc and Jassal, Bijay and Stephan, Ralf and Milacic, Marija and Rothfels, Karen and Senff-Ribeiro, Andrea and Griss, Johannes and Sevilla, Cristoffer and Matthews, Lisa and Gong, Chuqiao and Deng, Chuan and Varusai, Thawfeek and Ragueneau, Eliot and Haider, Yusra and May, Bruce and Shamovsky, Veronica and Weiser, Joel and Brunson, Timothy and Sanati, Nasim and Beckman, Liam and Shao, Xiang and Fabregat, Antonio and Sidiropoulos, Konstantinos and Murillo, Julieth and Viteri, Guilherme and Cook, Justin and Shorser, Solomon and Bader, Gary and Demir, Emek and Sander, Chris and Haw, Robin and Wu, Guanming and Stein, Lincoln and Hermjakob, Henning and D’Eustachio, Peter},
       doi = {10.1093/nar/gkab1028},
       issn = {0305-1048},
       journal = {Nucleic Acids Research},
       number = {D1},
       pages = {D687--D692},
       title = {The reactome pathway knowledgebase 2022},
       url = {https://doi.org/10.1093/nar/gkab1028},
       urldate = {2024-02-29},
       volume = {50},
       year = {2022}
}

@techreport{hagberg_exploring_2008,
       abstract = {NetworkX is a Python language package for exploration and analysis of networks and network algorithms. The core package provides data structures for representing many types of networks, or graphs, including simple graphs, directed graphs, and graphs with parallel edges and self loops. The nodes in NetworkX graphs can be any (hashable) Python object and edges can contain arbitrary data; this flexibility mades NetworkX ideal for representing networks found in many different scientific fields. In addition to the basic data structures many graph algorithms are implemented for calculating network properties and structure measures: shortest paths, betweenness centrality, clustering, and degree distribution and many more. NetworkX can read and write various graph formats for eash exchange with existing data, and provides generators for many classic graphs and popular graph models, such as the Erdoes-Renyi, Small World, and Barabasi-Albert models, are included. The ease-of-use and flexibility of the Python programming language together with connection to the SciPy tools make NetworkX a powerful tool for scientific computations. We discuss some of our recent work studying synchronization of coupled oscillators to demonstrate how NetworkX enables research in the field of computational networks.},
       author = {Hagberg, Aric and Swart, Pieter J. and Schult, Daniel A.},
       institution = {Los Alamos National Laboratory (LANL), Los Alamos, NM (United States)},
       language = {English},
       number = {LA-UR-08-05495; LA-UR-08-5495},
       title = {Exploring network structure, dynamics, and function using {NetworkX}},
       url = {https://www.osti.gov/biblio/960616},
       urldate = {2024-02-29},
       year = {2008}
}

@article{keating_sbml_2020,
       abstract = {Systems biology has experienced dramatic growth in the number, size, and complexity of computational models. To reproduce simulation results and reuse models, researchers must exchange unambiguous model descriptions. We review the latest edition of the Systems Biology Markup Language (SBML), a format designed for this purpose. A community of modelers and software authors developed SBML Level 3 over the past decade. Its modular form consists of a core suited to representing reaction‐based models and packages that extend the core with features suited to other model types including constraint‐based models, reaction‐diffusion models, logical network models, and rule‐based models. The format leverages two decades of SBML and a rich software ecosystem that transformed how systems biologists build and interact with models. More recently, the rise of multiscale models of whole cells and organs, and new data sources such as single‐cell measurements and live imaging, has precipitated new ways of integrating data with models. We provide our perspectives on the challenges presented by these developments and how SBML Level 3 provides the foundation needed to support this evolution.},
       author = {Keating, Sarah M and Waltemath, Dagmar and König, Matthias and Zhang, Fengkai and Dräger, Andreas and Chaouiya, Claudine and Bergmann, Frank T and Finney, Andrew and Gillespie, Colin S and Helikar, Tomáš and Hoops, Stefan and Malik‐Sheriff, Rahuman S and Moodie, Stuart L and Moraru, Ion I and Myers, Chris J and Naldi, Aurélien and Olivier, Brett G and Sahle, Sven and Schaff, James C and Smith, Lucian P and Swat, Maciej J and Thieffry, Denis and Watanabe, Leandro and Wilkinson, Darren J and Blinov, Michael L and Begley, Kimberly and Faeder, James R and Gómez, Harold F and Hamm, Thomas M and Inagaki, Yuichiro and Liebermeister, Wolfram and Lister, Allyson L and Lucio, Daniel and Mjolsness, Eric and Proctor, Carole J and Raman, Karthik and Rodriguez, Nicolas and Shaffer, Clifford A and Shapiro, Bruce E and Stelling, Joerg and Swainston, Neil and Tanimura, Naoki and Wagner, John and Meier‐Schellersheim, Martin and Sauro, Herbert M and Palsson, Bernhard and Bolouri, Hamid and Kitano, Hiroaki and Funahashi, Akira and Hermjakob, Henning and Doyle, John C and Hucka, Michael and {SBML Level 3 Community members} and Adams, Richard R and Allen, Nicholas A and Angermann, Bastian R and Antoniotti, Marco and Bader, Gary D and Červený, Jan and Courtot, Mélanie and Cox, Chris D and Dalle Pezze, Piero and Demir, Emek and Denney, William S and Dharuri, Harish and Dorier, Julien and Drasdo, Dirk and Ebrahim, Ali and Eichner, Johannes and Elf, Johan and Endler, Lukas and Evelo, Chris T and Flamm, Christoph and Fleming, Ronan MT and Fröhlich, Martina and Glont, Mihai and Gonçalves, Emanuel and Golebiewski, Martin and Grabski, Hovakim and Gutteridge, Alex and Hachmeister, Damon and Harris, Leonard A and Heavner, Benjamin D and Henkel, Ron and Hlavacek, William S and Hu, Bin and Hyduke, Daniel R and de Jong, Hidde and Juty, Nick and Karp, Peter D and Karr, Jonathan R and Kell, Douglas B and Keller, Roland and Kiselev, Ilya and Klamt, Steffen and Klipp, Edda and Knüpfer, Christian and Kolpakov, Fedor and Krause, Falko and Kutmon, Martina and Laibe, Camille and Lawless, Conor and Li, Lu and Loew, Leslie M and Machne, Rainer and Matsuoka, Yukiko and Mendes, Pedro and Mi, Huaiyu and Mittag, Florian and Monteiro, Pedro T and Natarajan, Kedar Nath and Nielsen, Poul MF and Nguyen, Tramy and Palmisano, Alida and Pettit, Jean‐Baptiste and Pfau, Thomas and Phair, Robert D and Radivoyevitch, Tomas and Rohwer, Johann M and Ruebenacker, Oliver A and Saez‐Rodriguez, Julio and Scharm, Martin and Schmidt, Henning and Schreiber, Falk and Schubert, Michael and Schulte, Roman and Sealfon, Stuart C and Smallbone, Kieran and Soliman, Sylvain and Stefan, Melanie I and Sullivan, Devin P and Takahashi, Koichi and Teusink, Bas and Tolnay, David and Vazirabad, Ibrahim and von Kamp, Axel and Wittig, Ulrike and Wrzodek, Clemens and Wrzodek, Finja and Xenarios, Ioannis and Zhukova, Anna and Zucker, Jeremy},
       doi = {10.15252/msb.20199110},
       issn = {1744-4292},
       journal = {Molecular Systems Biology},
       keywords = {computational modeling, file format, interoperability, reproducibility, systems biology},
       number = {8},
       pages = {e9110},
       shorttitle = {{SBML} {Level} 3},
       title = {{SBML} {Level} 3: an extensible format for the exchange and reuse of biological models},
       url = {https://www.embopress.org/doi/full/10.15252/msb.20199110},
       urldate = {2024-02-29},
       volume = {16},
       year = {2020}
}
