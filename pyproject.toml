[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "scribl"
description = "A system for the semantic capture of relationships in biological literature"
dynamic = ["version", "readme"]  # version generated dynamically
authors = [
    { name = "Amber Biology", email = "info@amberbiology.com" }
]
keywords = ["systems biology", "network biology", "literature database"]
license = {text = "GNU AGPLv3+"}

classifiers = [
"Programming Language :: Python :: 3",
"Intended Audience :: Science/Research",
"Topic :: Scientific/Engineering :: Bio-Informatics",
"License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
]

dependencies = [
    "pyparsing <= 3.2.1",
    "pandas <= 2.2.3",
    "pyzotero <= 1.6.8",
    "networkx <= 3.4.2",
    "matplotlib <= 3.10.0"
]

[project.optional-dependencies]
test = ["pytest"]

[project.scripts]
scribl="scribl.scribl:main"

[project.urls]
Homepage = "http://amberbiology.com"
Source = 'https://github.com/amberbiology/scribl/'
Tracker = 'https://github.com/amberbiology/scribl/issues'
Changelog = 'https://github.com/amberbiology/scribl/blob/main/CHANGELOG.md'

[tool.setuptools]
packages = ["scribl"]

[tool.setuptools.dynamic]
readme = {file = "README.md", content-type = "text/markdown"}

[tool.setuptools_scm]
version_file = "scribl/_version.py"
version_scheme = "post-release"

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib", "-ra", "--strict-config", "--strict-markers"]
testpaths = ["tests",]
minversion = "7"
log_cli_level = "INFO"
xfail_strict = true
filterwarnings = ["error"]

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
extend-select = [
  "ARG",      # flake8-unused-arguments
  "B",        # flake8-bugbear
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "EXE",      # flake8-executable
  "FURB",     # refurb
  "G",        # flake8-logging-format
  "I",        # isort
  "ICN",      # flake8-import-conventions
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "PYI",      # flake8-pyi
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
]
ignore = [
  "T201",     # allow `print()`
  "PTH107",   # allow .`os.remove` until `Path.unlink` works on later Pythons
  "PTH123",   # allow `open()`
  "ISC001",   # Conflicts with formatter
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
]
typing-modules = ["mypackage._compat.typing"]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]

[tool.codespell]
skip = './tests/test_data'
count = true
quiet-level = 3
ignore-words-list = 'exportin,als'

[tool.mdformat]
number = true
exclude = [
	"CHANGELOG.md",
	"paper/**"
	]
