# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Scribl Python package

on:
  push:
  pull_request:
  release:
    #types:
    #  - published

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build wheel and sdist
      run: |
        python -m pip install --upgrade pip
        python -m pip install build flake8 pytest
        python -m build
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        # use the find-links feature to look in the directory and pick the correct wheel
        # works also on Windows
        pip install --find-links=dist scribl
        # FIXME: manually create the sandbox, otherwise they fail
        mkdir tests/test_sandbox
        pytest -v tests
    - name: Upload artifact
      # if: github.event_name == 'release' && github.event.action == 'published' && github.event.release.prerelease == false
      uses: actions/upload-artifact@v4
      with:
        name: scribl-wheels-${{ matrix.os }}-${{ matrix.python-version }}
        path: dist/*
